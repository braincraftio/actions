name: Markdown Link Check
on:
  workflow_call:
    inputs:
      check-external:
        description: 'Check external links (slower but more thorough)'
        required: false
        type: boolean
        default: false
      generate-report:
        description: 'Generate broken links report'
        required: false
        type: boolean
        default: true
      repository-name:
        description: 'Repository name to check (optional, defaults to all)'
        required: false
        type: string
        default: ''

jobs:
  check-links:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      pull-requests: write

    container:
      image: ghcr.io/braincraftio/containers:devcontainer-latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      options: >-
        --user root
        --privileged
        -v /var/run/docker.sock:/var/run/docker.sock
        --security-opt seccomp=unconfined

    steps:
      - name: Setup BrainCraft.io Workspace
        uses: braincraftio/actions/.github/actions/setup-workspace@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          workspace-path: .

      - name: Configure Git Safe Directory
        run: |
          git config --global --add safe.directory '*'

      - name: Check Markdown Links
        shell: bash
        run: |
          if [[ "${{ inputs.check-external }}" == "true" ]]; then
            echo "üìã Checking markdown links (including external)..."
            mise run validate:links:online
          else
            echo "üìã Checking markdown links (offline only)..."
            mise run validate:links:offline
          fi

      - name: Generate Broken Links Report
        if: always() && inputs.generate-report
        shell: bash
        run: |
          mise run markdown:lint:report

      - name: Upload Broken Links Report
        if: always() && inputs.generate-report
        uses: actions/upload-artifact@v4
        with:
          name: broken-links-report
          path: .reports/broken-links-all.md
          retention-days: 7

      - name: Comment PR with Results
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'workspace/.reports/broken-links-all.md';

            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');

              // Truncate if too long for GitHub comment
              const maxLength = 65000;
              const truncatedReport = report.length > maxLength
                ? report.substring(0, maxLength) + '\n\n... (truncated)'
                : report;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ‚ùå Broken Links Found\n\n${truncatedReport}\n\nPlease fix the broken links before merging.`
              });
            }
